# Generated by Django 3.0.2 on 2020-07-04 12:25

from django.db import migrations, models
import django.db.models.deletion
import products.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, help_text='email for this brand', max_length=254, verbose_name='email')),
                ('phone_number', models.CharField(blank=True, help_text='the phone number of the user', max_length=20, verbose_name='phone')),
                ('company_name', models.CharField(help_text='the company name for this brand', max_length=255, verbose_name='company name')),
                ('address', models.TextField(help_text='the address for this brand', max_length=255, verbose_name='address')),
                ('logo', models.CharField(blank=True, help_text='the logo of this brand', max_length=255, verbose_name='logo')),
                ('activated', models.BooleanField(default=False, help_text='is this brand active', verbose_name='is active')),
                ('activator', models.IntegerField(blank=True, help_text='activator of this brand', null=True, verbose_name='activator')),
                ('city', models.ForeignKey(help_text='the city of the user', on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='users.City', verbose_name='city')),
                ('time_zone', models.ForeignKey(help_text='time zone of the user', on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='users.TimeZone', verbose_name='time zone')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='the name for this product', max_length=255, verbose_name='name')),
                ('upc', models.CharField(default=products.models.get_upc_number, help_text='the upc for this product', max_length=11, unique=True, verbose_name='upc')),
                ('logo', models.CharField(help_text='the logo of this product', max_length=255, verbose_name='logo')),
                ('description', models.TextField(blank=True, help_text='the logo of this product', max_length=255, verbose_name='logo')),
                ('website', models.URLField(help_text='the website of this product', max_length=255, verbose_name='website')),
                ('support_email', models.EmailField(help_text='support email for this product', max_length=254, verbose_name='support email')),
                ('support_phone_number', models.CharField(help_text='the support phone number of the product', max_length=20, verbose_name='support phone number')),
                ('cart_type', models.PositiveSmallIntegerField(choices=[(1, 'Multi use'), (2, 'Disposable')], help_text='the cart type for this product', verbose_name='cart type')),
                ('min_price', models.PositiveIntegerField(help_text='the min price of this product', verbose_name='min price')),
                ('max_price', models.PositiveIntegerField(help_text='the max price of this product', verbose_name='max price')),
                ('currency', models.CharField(help_text='the currency of the product', max_length=20, verbose_name='currency')),
                ('is_enable', models.BooleanField(default=False, help_text='is this product enable', verbose_name='is enable')),
                ('brand', models.ForeignKey(help_text='the brand of the product', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.Brand', verbose_name='brand')),
            ],
        ),
    ]
